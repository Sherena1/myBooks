// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { ServerHealthHealthGetResponse, AddNewBooksAddNewBookPostData, AddNewBooksAddNewBookPostResponse, GetAllBookGetBooksGetData, GetAllBookGetBooksGetResponse, GetOneBookGetOneBookGetData, GetOneBookGetOneBookGetResponse, SearchSearchGetData, SearchSearchGetResponse, ReadOneReadOnePostData, ReadOneReadOnePostResponse, ReadedBooksReadedBooksGetResponse } from './types.gen';

/**
 * Server Health
 * @returns HealthResponse Successful Response
 * @throws ApiError
 */
export const serverHealthHealthGet = (): CancelablePromise<ServerHealthHealthGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/health'
}); };

/**
 * Addnewbooks
 * @param data The data for the request.
 * @param data.name
 * @param data.category
 * @param data.description
 * @param data.formData
 * @returns Response Successful Response
 * @throws ApiError
 */
export const addNewBooksAddNewBookPost = (data: AddNewBooksAddNewBookPostData): CancelablePromise<AddNewBooksAddNewBookPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/add-new-book',
    query: {
        name: data.name,
        category: data.category,
        description: data.description
    },
    formData: data.formData,
    mediaType: 'multipart/form-data',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Getallbook
 * @param data The data for the request.
 * @param data.start
 * @param data.end
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const getAllBookGetBooksGet = (data: GetAllBookGetBooksGetData): CancelablePromise<GetAllBookGetBooksGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/get-books',
    query: {
        start: data.start,
        end: data.end
    },
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Getonebook
 * @param data The data for the request.
 * @param data.id
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const getOneBookGetOneBookGet = (data: GetOneBookGetOneBookGetData): CancelablePromise<GetOneBookGetOneBookGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/get-one-book',
    query: {
        id: data.id
    },
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Search
 * @param data The data for the request.
 * @param data.q
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const searchSearchGet = (data: SearchSearchGetData): CancelablePromise<SearchSearchGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/search',
    query: {
        q: data.q
    },
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Read One
 * @param data The data for the request.
 * @param data.id
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const readOneReadOnePost = (data: ReadOneReadOnePostData): CancelablePromise<ReadOneReadOnePostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/read-one',
    query: {
        id: data.id
    },
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Readed Books
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const readedBooksReadedBooksGet = (): CancelablePromise<ReadedBooksReadedBooksGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/readed-books'
}); };